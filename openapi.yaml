openapi: 3.0.0
info:
  title: API –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —à–∫–æ–ª—ã –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤
  description: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è REST API –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —è–∑—ã–∫–æ–≤–æ–π —à–∫–æ–ª—ã
  version: 1.0.0

paths:

  ### üìò –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏
  /teachers:
    get:
      summary: –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
      tags: [–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
          content:
            application/json:
              schema:
                type: object
                properties:
                  teachers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Teacher'
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
    post:
      summary: –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
      tags: [–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeacher'
      responses:
        '201':
          description: –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'

  /teachers/{id}:
    get:
      summary: –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ
      tags: [–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
    put:
      summary: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
      tags: [–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeacher'
      responses:
        '200':
          description: –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
    delete:
      summary: –£–¥–∞–ª–∏—Ç—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
      tags: [–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω

  /teachers/search:
    get:
      summary: –ü–æ–∏—Å–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
      tags: [–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏]
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ —è–∑—ã–∫–∞–º
      responses:
        '200':
          description: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'

  /teachers/{id}/upload-photo:
    post:
      summary: –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
      tags: [–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
          content:
            application/json:
              schema:
                type: object
                properties:
                  photoUrl:
                    type: string

  ### üéì –°—Ç—É–¥–µ–Ω—Ç—ã
  /students:
    get:
      summary: –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
      tags: [–°—Ç—É–¥–µ–Ω—Ç—ã]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
          content:
            application/json:
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items:
                      $ref: '#/components/schemas/Student'
                  total:
                    type: integer
                  page:
                    type: integer
                  limit:
                    type: integer
    post:
      summary: –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞
      tags: [–°—Ç—É–¥–µ–Ω—Ç—ã]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
      responses:
        '201':
          description: –°—Ç—É–¥–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

  /students/{id}:
    get:
      summary: –ü—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
      tags: [–°—Ç—É–¥–µ–Ω—Ç—ã]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –ü—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    put:
      summary: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞
      tags: [–°—Ç—É–¥–µ–Ω—Ç—ã]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudent'
      responses:
        '200':
          description: –°—Ç—É–¥–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    delete:
      summary: –£–¥–∞–ª–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞
      tags: [–°—Ç—É–¥–µ–Ω—Ç—ã]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: –°—Ç—É–¥–µ–Ω—Ç —É–¥–∞–ª–µ–Ω

  /students/search:
    get:
      summary: –ü–æ–∏—Å–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
      tags: [–°—Ç—É–¥–µ–Ω—Ç—ã]
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: –ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ —è–∑—ã–∫–∞–º
      responses:
        '200':
          description: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'

  ### üìö –ö—É—Ä—Å—ã
  /courses:
    get:
      summary: –°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤
      tags: [–ö—É—Ä—Å—ã]
      parameters:
        - name: language
          in: query
          schema:
            type: string
          description: –§–∏–ª—å—Ç—Ä –ø–æ —è–∑—ã–∫—É
        - name: level
          in: query
          schema:
            type: string
          description: –§–∏–ª—å—Ç—Ä –ø–æ —É—Ä–æ–≤–Ω—é
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      summary: –°–æ–∑–¥–∞—Ç—å –∫—É—Ä—Å
      tags: [–ö—É—Ä—Å—ã]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourse'
      responses:
        '201':
          description: –ö—É—Ä—Å —Å–æ–∑–¥–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'

  /courses/{id}:
    get:
      summary: –î–µ—Ç–∞–ª–∏ –∫—É—Ä—Å–∞
      tags: [–ö—É—Ä—Å—ã]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –î–µ—Ç–∞–ª–∏ –∫—É—Ä—Å–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetails'
    put:
      summary: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä—Å
      tags: [–ö—É—Ä—Å—ã]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourse'
      responses:
        '200':
          description: –ö—É—Ä—Å –æ–±–Ω–æ–≤–ª–µ–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
    delete:
      summary: –£–¥–∞–ª–∏—Ç—å –∫—É—Ä—Å
      tags: [–ö—É—Ä—Å—ã]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: –ö—É—Ä—Å —É–¥–∞–ª–µ–Ω

  /courses/{id}/students:
    get:
      summary: –°—Ç—É–¥–µ–Ω—Ç—ã –∫—É—Ä—Å–∞
      tags: [–ö—É—Ä—Å—ã]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∫—É—Ä—Å–∞
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –∫—É—Ä—Å
      tags: [–ö—É—Ä—Å—ã]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                studentId:
                  type: string
      responses:
        '200':
          description: –°—Ç—É–¥–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫—É—Ä—Å

  /courses/{id}/students/{studentId}:
    delete:
      summary: –£–¥–∞–ª–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –∫—É—Ä—Å–∞
      tags: [–ö—É—Ä—Å—ã]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: –°—Ç—É–¥–µ–Ω—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –∫—É—Ä—Å–∞

  ### üìÖ –ó–∞–Ω—è—Ç–∏—è
  /lessons:
    get:
      summary: –°–ø–∏—Å–æ–∫ –∑–∞–Ω—è—Ç–∏–π
      tags: [–ó–∞–Ω—è—Ç–∏—è]
      parameters:
        - name: date
          in: query
          schema:
            type: string
            format: date
          description: –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ
        - name: teacherId
          in: query
          schema:
            type: string
          description: –§–∏–ª—å—Ç—Ä –ø–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é
        - name: courseId
          in: query
          schema:
            type: string
          description: –§–∏–ª—å—Ç—Ä –ø–æ –∫—É—Ä—Å—É
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –∑–∞–Ω—è—Ç–∏–π
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lesson'
    post:
      summary: –°–æ–∑–¥–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ
      tags: [–ó–∞–Ω—è—Ç–∏—è]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLesson'
      responses:
        '201':
          description: –ó–∞–Ω—è—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'

  /lessons/{id}:
    get:
      summary: –î–µ—Ç–∞–ª–∏ –∑–∞–Ω—è—Ç–∏—è
      tags: [–ó–∞–Ω—è—Ç–∏—è]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –î–µ—Ç–∞–ª–∏ –∑–∞–Ω—è—Ç–∏—è
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonDetails'
    put:
      summary: –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω—è—Ç–∏–µ
      tags: [–ó–∞–Ω—è—Ç–∏—è]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLesson'
      responses:
        '200':
          description: –ó–∞–Ω—è—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
    delete:
      summary: –£–¥–∞–ª–∏—Ç—å –∑–∞–Ω—è—Ç–∏–µ
      tags: [–ó–∞–Ω—è—Ç–∏—è]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: –ó–∞–Ω—è—Ç–∏–µ —É–¥–∞–ª–µ–Ω–æ

  ### üìë –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
  /languages:
    get:
      summary: –°–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤
      tags: [–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    code:
                      type: string

  /levels:
    get:
      summary: –°–ø–∏—Å–æ–∫ —É—Ä–æ–≤–Ω–µ–π
      tags: [–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏]
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ —É—Ä–æ–≤–Ω–µ–π –≤–ª–∞–¥–µ–Ω–∏—è —è–∑—ã–∫–æ–º
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string

  /lesson-types:
    get:
      summary: –¢–∏–ø—ã –∑–∞–Ω—è—Ç–∏–π
      tags: [–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏]
      responses:
        '200':
          description: –¢–∏–ø—ã –∑–∞–Ω—è—Ç–∏–π (–≥—Ä—É–ø–ø–æ–≤—ã–µ, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    maxStudents:
                      type: integer

  ### üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  /dashboard/stats:
    get:
      summary: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
      tags: [–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞]
      responses:
        '200':
          description: –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalStudents:
                    type: integer
                  totalTeachers:
                    type: integer
                  totalCourses:
                    type: integer
                  totalLessons:
                    type: integer
                  upcomingLessons:
                    type: integer

components:
  schemas:
    Teacher:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        languages:
          type: array
          items:
            type: string
        photoUrl:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateTeacher:
      type: object
      required:
        - name
        - email
        - languages
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        languages:
          type: array
          items:
            type: string

    UpdateTeacher:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        languages:
          type: array
          items:
            type: string

    Student:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        targetLanguages:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
              level:
                type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateStudent:
      type: object
      required:
        - name
        - email
        - targetLanguages
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        targetLanguages:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
              level:
                type: string

    UpdateStudent:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        targetLanguages:
          type: array
          items:
            type: object
            properties:
              language:
                type: string
              level:
                type: string

    Course:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        language:
          type: string
        level:
          type: string
        teacherId:
          type: string
        maxStudents:
          type: integer
        currentStudents:
          type: integer
        schedule:
          type: array
          items:
            type: object
            properties:
              dayOfWeek:
                type: integer
              startTime:
                type: string
              duration:
                type: integer
        createdAt:
          type: string
          format: date-time

    CreateCourse:
      type: object
      required:
        - name
        - language
        - level
        - teacherId
        - schedule
      properties:
        name:
          type: string
        description:
          type: string
        language:
          type: string
        level:
          type: string
        teacherId:
          type: string
        maxStudents:
          type: integer
          default: 8
        schedule:
          type: array
          items:
            type: object
            properties:
              dayOfWeek:
                type: integer
              startTime:
                type: string
              duration:
                type: integer

    UpdateCourse:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        teacherId:
          type: string
        maxStudents:
          type: integer
        schedule:
          type: array
          items:
            type: object
            properties:
              dayOfWeek:
                type: integer
              startTime:
                type: string
              duration:
                type: integer

    CourseDetails:
      allOf:
        - $ref: '#/components/schemas/Course'
        - type: object
          properties:
            teacher:
              $ref: '#/components/schemas/Teacher'
            students:
              type: array
              items:
                $ref: '#/components/schemas/Student'

    Lesson:
      type: object
      properties:
        id:
          type: string
        courseId:
          type: string
        teacherId:
          type: string
        date:
          type: string
          format: date
        startTime:
          type: string
        duration:
          type: integer
        type:
          type: string
          enum: [group, individual]
        zoomLink:
          type: string
        status:
          type: string
          enum: [scheduled, completed, cancelled]
        createdAt:
          type: string
          format: date-time

    CreateLesson:
      type: object
      required:
        - courseId
        - date
        - startTime
        - duration
        - type
      properties:
        courseId:
          type: string
        date:
          type: string
          format: date
        startTime:
          type: string
        duration:
          type: integer
        type:
          type: string
          enum: [group, individual]
        zoomLink:
          type: string

    UpdateLesson:
      type: object
      properties:
        date:
          type: string
          format: date
        startTime:
          type: string
        duration:
          type: integer
        zoomLink:
          type: string
        status:
          type: string
          enum: [scheduled, completed, cancelled]

    LessonDetails:
      allOf:
        - $ref: '#/components/schemas/Lesson'
        - type: object
          properties:
            course:
              $ref: '#/components/schemas/Course'
            teacher:
              $ref: '#/components/schemas/Teacher'
            students:
              type: array
              items:
                $ref: '#/components/schemas/Student'
